■演習5-2 非正規化によるSQLチューニング
演習5-1の解答のSQL文に対して、パフォーマンス向上を実施します。
本章で学んだ非正規化を含むテーブル構成の変更による方法を考えてください。

【SQL文1】商品分類ごとの商品数結果には分類名を含むものとする

	SELECT
		商品分類.分類名, COUNT(*) AS 商品数
	FROM 商品
	INNER JOIN 商品分類
		ON 商品.商品分類コード=商品分類.商品分類コード
	GROUP BY 商品分類.分類名
	;

⇒商品分類のテーブルに商品数の項目を追加する
------------- -----------    ------
|★商品分類コード |分類名   |商品数   |
------------- ----------- -  ------ -
|C1               |水洗用品 |        4|
------------- ----------- -  ------ -
|C2               |食器     |        2|
------------- ----------- -  ------ -
|C3               |書籍     |        1|
------------- ----------- -  ------ -
|C4               |日用雑貨 |        1|
------------- ----------- -  ------ -

⇒上記のようにテーブル構成を変更すると下記のようなSQLになる
	SELECT
		分類名,商品数
	FROM 商品分類
	;


【SQL文2】支社／支店別の取り扱い商品の一覧。結果には支社名、支店名、商品名を含むものとする

	SELECT
		支社.支社名, 支店.支店名, 商品.商品名
	FROM 支店商品
	INNER JOIN 支社
		ON 支店商品.支社コード=支社.支社コード
	INNER JOIN 支店
		ON 支店商品.支社コード=支店.支社コード
		AND 支店商品.支店コード=支店.支店コード
	INNER JOIN 商品
		ON 支店商品.商品コード=商品.商品コード
	;

⇒支社商品テーブルに支社名、支店名、商品名の項目を追加する
(更新箇所が増える為、メンテナンスが大変になる懸念がある。もし無理やりテーブル構成をチューニングするとしたらこのような形になる。)

支店商品
 --------------------------------------------------------------------------------------
|★支社コード |支社名       |★支店コード |支店名       |★商品コード  |商品名        |
 ---------------------------------------------------------------------------------------
|001          |東京         |01           |渋谷         |001           |石鹸          |
 --------------------------------------------------------------------------------------
|001          |東京         |01           |渋谷         |002           |タオル        |
 --------------------------------------------------------------------------------------
|001          |東京         |01           |渋谷         |003           |ハブラシ      |
 --------------------------------------------------------------------------------------
|001          |東京         |02           |八重洲       |002           |タオル        |
 --------------------------------------------------------------------------------------
|001          |東京         |02           |八重洲       |003           |ハブラシ      |
 --------------------------------------------------------------------------------------
|001          |東京         |02           |八重洲       |004           |コップ        |
 --------------------------------------------------------------------------------------
|001          |東京         |02           |八重洲       |005           |箸            |
 --------------------------------------------------------------------------------------
|001          |東京         |02           |八重洲       |006           |スプーン      |
 --------------------------------------------------------------------------------------
|002          |大阪         |01           |堺           |001           |石鹸          |
 --------------------------------------------------------------------------------------
|002          |大阪         |01           |堺           |002           |タオル        |
 --------------------------------------------------------------------------------------
|002          |大阪         |02           |豊中         |007           |雑誌          |
 --------------------------------------------------------------------------------------
|002          |大阪         |02           |豊中         |008           |爪切り        |
 --------------------------------------------------------------------------------------

 ⇒上記のようにテーブル構成を変更すると下記のようなSQLになる
 	SELECT
 		支社名,支店名,商品名
 	FROM
 		支店商品
 	;

【SQL文3】最も取扱商品数の多い支店の支店コードと商品数

	SELECT
		支店コード, 支店名, 商品数
	FROM
		(
			SELECT
				支店商品.支店コード AS 支店コード, 支店.支店名 AS 支店名,  COUNT(*) AS 商品数
			FROM 支店商品
			INNER JOIN 支店
				ON 支店商品.支社コード=支店.支社コード
				AND 支店商品.支店コード=支店.支店コード
			GROUP BY 支店商品.支店コード, 支店.支店名
		) 商品数クエリ
	WHERE NOT EXISTS
		(
			SELECT 'X'
			FROM
				(
					SELECT
						支店商品.支店コード AS 支店コード, 支店.支店名 AS 支店名,  COUNT(*) AS 商品数
					FROM 支店商品
					INNER JOIN 支店
						ON 支店商品.支社コード=支店.支社コード
						AND 支店商品.支店コード=支店.支店コード
					GROUP BY 支店商品.支店コード, 支店.支店名
				) 商品数クエリサブ
			WHERE
				商品数クエリ.商品数 <  商品数クエリサブ.商品数
		)
	;

⇒支社商品テーブルに商品数の項目を追加する

支店商品
 ----------------------------------------------------------
|★支社コード |★支店コード |★商品コード  |商品数        |
 ----------------------------------------------------------
|001          |01           |001           |3             |
 ----------------------------------------------------------
|001          |01           |002           |3             |
 ----------------------------------------------------------
|001          |01           |003           |3             |
 ----------------------------------------------------------
|001          |02           |002           |5             |
 ----------------------------------------------------------
|001          |02           |003           |5             |
 ----------------------------------------------------------
|001          |02           |004           |5             |
 ----------------------------------------------------------
|001          |02           |005           |5             |
 ----------------------------------------------------------
|001          |02           |006           |5             |
 ----------------------------------------------------------
|002          |01           |001           |2             |
 ----------------------------------------------------------
|002          |01           |002           |2             |
 ----------------------------------------------------------
|002          |02           |007           |1             |
 ----------------------------------------------------------
|002          |02           |008           |1             |
 ----------------------------------------------------------

 ⇒上記のようにテーブル構成を変更すると下記のようなSQLになる
 	SELECT
 		DISTINCT A.支店コード, 支店.支店名, A.商品数
 	FROM 支店商品 A
	INNER JOIN 支店
		ON 支店商品.支社コード=支店.支社コード
		AND 支店商品.支店コード=支店.支店コード
	WHERE NOT EXISTS
		(
			SELECT 'X'
			FROM 支店商品 B
			WHERE A.商品数 <  A.商品数
		)
	;

