■演習7-1 パーティションの特徴
7-5節ではバットノウハウ「水平分割」の代替手段として「パーティション」機能の存在を取り上げました。
このパーティションにはいくつかの種類があります。以下に代表的なパーティションを挙げます。これらがどのような利点と欠点を持っているかを整理してください。

	●レンジパーティション
		特定のカラムの値を範囲で指定してテーブルをパーティションする
		メリット：パーティション化に使用しているカラムの範囲でデータ削除をする際に通常のDELETEよりもパーティション自体をDROPすることができるので効率的。
		          パーティション化に使用しているカラムで頻繁にクエリを実行するような場合も効率的であることが多い。
		          日付によるパーティショニングに向いている。
		デメリット：日付などのように連続したデータや、順序があるデータでないと適用できない。

	●リストパーティション
		特定のカラムをパーティションキーとしてデータを振り分ける
		メリット：データの値が連続的でなくても使用できる
		デメリット：パーティションキーの値ごとのデータ量に偏りがある場合は向かない。

	●ハッシュパーティション
		データの値をハッシュ関数で変換し、その値をキーにデータを振り分ける
		メリット：範囲や、リストでデータを分けるとデータの量に偏りが出てしまう場合に有効。
		デメリット：変換したハッシュ値をもとにデータを分けるので範囲検索は出来ない。


■演習7-2 マテリアライズドビューの機能
7-5節ではバットノウハウ「垂直分割」の代替手段として、集約、特にデータマートを取り上げました。
このデータマートを実現する手段として、DBMSは「マテリアライズドビュー」という機能を提供しています。
これがどのような機能であるか調べてください。

	問い合わせ結果をテーブルとして保持する機能。
	使用頻度の高い結合処理や、複雑な検索処理の結果をテーブルとして保持することで処理の高速化ができる。
	マテリアライズドビューはある時点の処理結果を保持しているかたちになるので、常に最新の状態ではなく、更新処理が必要。
	更新処理には差分のみを更新する「高速リフレッシュ」とマテリアライズドビューを作り直してすべてを更新する「完全リフレッシュ」がある。
